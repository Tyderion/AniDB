/*
 * XaucSwing.java
 * Created on 2/Jan/2009, 20:19:31
 */
package clients;

import avparsing.AVParserOptions;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import structures.SwingFile;
import hashing.HasherOptions;
import structures.AniDBFile;
import utils.FileParser;
import utils.Log;
import utils.Progress;
import utils.SwingProcesserHandler;
import utils.SwingProgress;

/** Xauc GUI (Swing) frontend */
public class XaucSwing extends javax.swing.JFrame implements WindowListener {
	private static final long serialVersionUID = 6222926566397039140L;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddFile;
    private javax.swing.JButton buttonAddFolder;
    private javax.swing.JButton buttonRemoveAll;
    private javax.swing.JButton buttonStartHash;
    private javax.swing.JPanel filesFrame;
    private javax.swing.JScrollPane filesPane;
    private javax.swing.JTable filesTable;
    private javax.swing.JProgressBar progressFiles;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenuItem menuEditPreferences;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuFileAddFile;
    private javax.swing.JMenuItem menuFileAddFolder;
    private javax.swing.JMenuItem menuFileExit;
    private javax.swing.JSeparator menuFileSeparator;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuHelpAbout;
    private javax.swing.JProgressBar progressOverall;
    private javax.swing.JLabel statusIcon;
    private javax.swing.JTextField statusText;
    // End of variables declaration//GEN-END:variables
	protected boolean disableFileAdd = false;
	protected HashMap<File,SwingFile> files = new HashMap<File,SwingFile>();
	protected HasherOptions hashingOptions = new HasherOptions();
	protected AVParserOptions parsingOptions = new AVParserOptions();
	protected boolean recurseDir = false;
	protected boolean seeDebug = false;
	protected boolean hashingEnabled = true;
	protected boolean parsingEnabled = false; // not enabled for the moment
	protected boolean writeXMLtoDisk = false;
	protected boolean writeFILEtoConsole = false;
	protected String appDir = System.getProperty("user.home") + File.separator + ".xauc";
	protected String logFile = appDir + File.separator + "log.txt";
	protected Log log = new Log(logFile);

	/** Creates new form XaucSwing */
	public XaucSwing() {
		XaucConsole.checkAppDir();
		initComponents();
		setFilesTableLayout();
		this.addWindowListener(this);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonAddFile = new javax.swing.JButton();
        buttonAddFolder = new javax.swing.JButton();
        buttonRemoveAll = new javax.swing.JButton();
        filesFrame = new javax.swing.JPanel();
        filesPane = new javax.swing.JScrollPane();
        filesTable = new javax.swing.JTable();
        statusIcon = new javax.swing.JLabel();
        statusText = new javax.swing.JTextField();
        progressOverall = new javax.swing.JProgressBar();
        buttonStartHash = new javax.swing.JButton();
        progressFiles = new javax.swing.JProgressBar();
        menuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFileAddFile = new javax.swing.JMenuItem();
        menuFileAddFolder = new javax.swing.JMenuItem();
        menuFileSeparator = new javax.swing.JSeparator();
        menuFileExit = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        menuEditPreferences = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuHelpAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("xAUC - x AniDB UDP Client");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(740, 500));
        setName("mainFrame"); // NOI18N

        buttonAddFile.setFont(buttonAddFile.getFont().deriveFont(buttonAddFile.getFont().getSize()-1f));
        buttonAddFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/page_white_add.png"))); // NOI18N
        buttonAddFile.setText("Add files");
        buttonAddFile.setBorder(null);
        buttonAddFile.setContentAreaFilled(false);
        buttonAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddFileActionPerformed(evt);
            }
        });

        buttonAddFolder.setFont(buttonAddFolder.getFont().deriveFont(buttonAddFolder.getFont().getSize()-1f));
        buttonAddFolder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/folder_add.png"))); // NOI18N
        buttonAddFolder.setText("Add directory");
        buttonAddFolder.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonAddFolder.setContentAreaFilled(false);
        buttonAddFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddFolderActionPerformed(evt);
            }
        });

        buttonRemoveAll.setFont(buttonRemoveAll.getFont().deriveFont(buttonRemoveAll.getFont().getSize()-1f));
        buttonRemoveAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/page_white_delete.png"))); // NOI18N
        buttonRemoveAll.setText("Remove all");
        buttonRemoveAll.setBorder(null);
        buttonRemoveAll.setContentAreaFilled(false);
        buttonRemoveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoveAllActionPerformed(evt);
            }
        });

        filesFrame.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Files and hashes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        filesFrame.setAutoscrolls(true);
        filesFrame.setFont(filesFrame.getFont().deriveFont(filesFrame.getFont().getSize()-1f));

        filesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Filename", "Hash", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        filesPane.setViewportView(filesTable);
        filesTable.getColumnModel().getColumn(1).setMinWidth(200);
        filesTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        filesTable.getColumnModel().getColumn(1).setMaxWidth(200);
        filesTable.getColumnModel().getColumn(2).setMinWidth(100);
        filesTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        filesTable.getColumnModel().getColumn(2).setMaxWidth(100);

        javax.swing.GroupLayout filesFrameLayout = new javax.swing.GroupLayout(filesFrame);
        filesFrame.setLayout(filesFrameLayout);
        filesFrameLayout.setHorizontalGroup(
            filesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filesPane, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
        );
        filesFrameLayout.setVerticalGroup(
            filesFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filesPane, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
        );

        statusIcon.setFont(statusIcon.getFont().deriveFont(statusIcon.getFont().getSize()-1f));
        statusIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/disconnect.png"))); // NOI18N

        statusText.setEditable(false);
        statusText.setFont(statusText.getFont().deriveFont(statusText.getFont().getSize()-1f));
        statusText.setText("not connected to AniDB");
        statusText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusTextActionPerformed(evt);
            }
        });

        progressOverall.setFont(progressOverall.getFont().deriveFont(progressOverall.getFont().getSize()-1f));

        buttonStartHash.setFont(buttonStartHash.getFont().deriveFont(buttonStartHash.getFont().getSize()-1f));
        buttonStartHash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/page_white_go.png"))); // NOI18N
        buttonStartHash.setText("Hash files");
        buttonStartHash.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonStartHash.setContentAreaFilled(false);
        buttonStartHash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartHashActionPerformed(evt);
            }
        });

        progressFiles.setFont(progressFiles.getFont().deriveFont(progressFiles.getFont().getSize()-1f));

        menuBar.setName("menuBar"); // NOI18N

        menuFile.setText("File");
        menuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileActionPerformed(evt);
            }
        });

        menuFileAddFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        menuFileAddFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/page_white_add.png"))); // NOI18N
        menuFileAddFile.setText("Add files");
        menuFileAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileAddFileActionPerformed(evt);
            }
        });
        menuFile.add(menuFileAddFile);

        menuFileAddFolder.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        menuFileAddFolder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/folder_add.png"))); // NOI18N
        menuFileAddFolder.setText("Add directory");
        menuFileAddFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileAddFolderActionPerformed(evt);
            }
        });
        menuFile.add(menuFileAddFolder);
        menuFile.add(menuFileSeparator);

        menuFileExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuFileExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cross.png"))); // NOI18N
        menuFileExit.setText("Exit");
        menuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFileExitActionPerformed(evt);
            }
        });
        menuFile.add(menuFileExit);

        menuBar.add(menuFile);

        menuEdit.setText("Edit");

        menuEditPreferences.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        menuEditPreferences.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cog.png"))); // NOI18N
        menuEditPreferences.setText("Preferences");
        menuEdit.add(menuEditPreferences);

        menuBar.add(menuEdit);

        menuHelp.setText("Help");

        menuHelpAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        menuHelpAbout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/information.png"))); // NOI18N
        menuHelpAbout.setText("About");
        menuHelp.add(menuHelpAbout);

        menuBar.add(menuHelp);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(buttonAddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAddFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonRemoveAll, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 321, Short.MAX_VALUE)
                .addComponent(buttonStartHash, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(statusIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusText, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressOverall, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(progressFiles, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(filesFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddFile, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRemoveAll, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonStartHash, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filesFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progressFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progressOverall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusText, 0, 0, Short.MAX_VALUE)
                    .addComponent(statusIcon, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddFileActionPerformed
		addFileAction();
}//GEN-LAST:event_buttonAddFileActionPerformed

    private void statusTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusTextActionPerformed
		// TODO add your handling code here:
}//GEN-LAST:event_statusTextActionPerformed

    private void buttonAddFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddFolderActionPerformed
		addFolderAction();
    }//GEN-LAST:event_buttonAddFolderActionPerformed

    private void menuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileActionPerformed
		// TODO add your handling code here:
    }//GEN-LAST:event_menuFileActionPerformed

    private void menuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileExitActionPerformed
		XaucSwing.this.processWindowEvent(new WindowEvent(XaucSwing.this, WindowEvent.WINDOW_CLOSED));
    }//GEN-LAST:event_menuFileExitActionPerformed

	private void menuFileAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileAddFileActionPerformed
		addFileAction();
	}//GEN-LAST:event_menuFileAddFileActionPerformed

	private void menuFileAddFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFileAddFolderActionPerformed
		addFolderAction();
	}//GEN-LAST:event_menuFileAddFolderActionPerformed

	private void buttonRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoveAllActionPerformed
		filesTable.removeAll();
		this.files = null;
	}//GEN-LAST:event_buttonRemoveAllActionPerformed

	private void buttonStartHashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartHashActionPerformed
		startProcessing();
	}//GEN-LAST:event_buttonStartHashActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		try {
			// Set platform Java L&F
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (UnsupportedLookAndFeelException e) {
			//return;
		} catch (Exception e) {
			//return;
		}
		java.awt.EventQueue.invokeLater(new Runnable() {

			public void run() {
				new XaucSwing().setVisible(true);
			}
		});
	}

	/**
	 * This method sets the layout of the files table
	 */
	public void setFilesTableLayout() {
		
	}
	
	/**
	 * Action exectuted for adding files
	 */
	public void addFileAction() {
		if (this.disableFileAdd) return;
		XaucSwingAddDialog addfile = new XaucSwingAddDialog();
		addfile.setMode(true);
		addfile.setXaucSwing(this);
		addfile.setVisible(true);
	}

	/**
	 * Action exectuted for adding files from folder
	 */
	public void addFolderAction() {
		if (this.disableFileAdd) return;
		XaucSwingAddDialog addfolder = new XaucSwingAddDialog();
		addfolder.setXaucSwing(this);
		addfolder.setVisible(true);
	}

	public void startProcessing() {
		if (this.files.isEmpty()) return;
		this.disableFileAdd = true;
		SwingProgress mainProgressBar = new SwingProgress();
		mainProgressBar.setProgressBar(this.progressOverall);
		SwingProgress fileProgressBar = new SwingProgress();
		fileProgressBar.setProgressBar(this.progressFiles);
		this.parsingOptions.setEnabled(false);
		SwingProcesserHandler processer = new SwingProcesserHandler(this.files,this.hashingOptions,this.parsingOptions);
		processer.setMainProgressBar(mainProgressBar);
		processer.setFileProgressBar(fileProgressBar);
		processer.setFilesTable(this.filesTable);
		processer.setLog(this.log);
		Thread pthread = new Thread(processer);
		pthread.start();
		this.disableFileAdd = false;
	}
	
	/**
	 * Adds a file to the FilesTable
	 * @param file File to add
	 */
	public void addFileToFilesTable(File file) {
		if (this.files.containsKey(file)) return; // file already exists
		DefaultTableModel model = (DefaultTableModel) filesTable.getModel();
		model.addRow(new Object[]{file.getName(),"","waiting"});
		SwingFile sf = new SwingFile(file,model.getRowCount()-1);
		sf.setADDED();
		this.files.put(file, sf);
	}
	
	@Override
	public void windowOpened(WindowEvent e) {
		//throw new UnsupportedOperationException("Not supported yet.");
	}

	@Override
	public void windowClosing(WindowEvent e) {
		System.out.println("Closing window");
	//throw new UnsupportedOperationException("Not supported yet.");
	}

	@Override
	public void windowClosed(WindowEvent e) {
		// Do some clean up
		System.out.println("Closed window");
		// Now exit
		System.exit(0);
	}

	@Override
	public void windowIconified(WindowEvent e) {
		//throw new UnsupportedOperationException("Not supported yet.");
	}

	@Override
	public void windowDeiconified(WindowEvent e) {
		//throw new UnsupportedOperationException("Not supported yet.");
	}

	@Override
	public void windowActivated(WindowEvent e) {
		//throw new UnsupportedOperationException("Not supported yet.");
	}

	@Override
	public void windowDeactivated(WindowEvent e) {
		//throw new UnsupportedOperationException("Not supported yet.");
	}
}
