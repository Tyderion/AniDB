/*
 * SwingOptionsEditor.java
 *
 * Created on 9/Abr/2009, 16:14:54
 */

package options;

import java.awt.event.ItemEvent;
import javax.swing.ImageIcon;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author fahrenheit
 */
public class SwingOptionsEditor extends javax.swing.JFrame {
	private static final long serialVersionUID = 7704255408465416278L;
	protected String appDir = null;
	protected HasherOptions hasherOptions = null;
	protected boolean dirty = false;

    /**
     * Sets the Application Directory
	 * @param appDir The Application Directory to set
	 */
	public synchronized void setAppDir(String appDir) { this.appDir = appDir; }

	/**
	 * Sets the Hasher Options Object
	 * @param hasherOptions The Hasher Options object to use
	 */
	public synchronized void setHasherOptions(HasherOptions hasherOptions) { this.hasherOptions = hasherOptions; }

	/** Creates new form SwingOptionsEditor */
    public SwingOptionsEditor() {
    	setLookAndFeel();
		this.setIconImage(new ImageIcon(SwingOptionsEditor.class.getResource("/icons/cog.png")).getImage());
        initComponents();
		loadSettings();
    }

	// Loads settings
	protected synchronized void loadSettings() {
		if (hasherOptions != null) {
			this.hashing_enabled_ck.setSelected(hasherOptions.enabled);
			this.hashing_ed2k_ck.setSelected(hasherOptions.ed2k);
			this.hashing_crc32_ck.setSelected(hasherOptions.crc32);
			this.hashing_md5_ck.setSelected(hasherOptions.md5);
			this.hashing_sha1_ck.setSelected(hasherOptions.sha1);
			this.hashing_tth_ck.setSelected(hasherOptions.tth);
			if (hasherOptions.enabled) {
				this.hashing_ed2k_ck.setEnabled(hasherOptions.ed2k);
				this.hashing_crc32_ck.setEnabled(hasherOptions.crc32);
				this.hashing_md5_ck.setEnabled(hasherOptions.md5);
				this.hashing_sha1_ck.setEnabled(hasherOptions.sha1);
				this.hashing_tth_ck.setEnabled(hasherOptions.tth);
			}
		}
	}

	// Save settings
	protected synchronized void saveSettings() {
		if (hasherOptions != null && appDir != null) {
			hasherOptions.enabled = this.hashing_enabled_ck.isSelected();
			hasherOptions.ed2k = this.hashing_ed2k_ck.isSelected();
			hasherOptions.crc32 = this.hashing_crc32_ck.isSelected();
			hasherOptions.md5 = this.hashing_md5_ck.isSelected();
			hasherOptions.sha1 = this.hashing_sha1_ck.isSelected();
			hasherOptions.tth = this.hashing_tth_ck.isSelected();
			hasherOptions.saveSettings(appDir);
		}
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        optionsPanels = new javax.swing.JTabbedPane();
        hashingPane = new javax.swing.JPanel();
        hashing_enabled_ck = new javax.swing.JCheckBox();
        hashing_algorithms = new javax.swing.JPanel();
        hashing_ed2k_ck = new javax.swing.JCheckBox();
        hashing_crc32_ck = new javax.swing.JCheckBox();
        hashing_md5_ck = new javax.swing.JCheckBox();
        hashing_sha1_ck = new javax.swing.JCheckBox();
        hashing_tth_ck = new javax.swing.JCheckBox();
        apply_button = new javax.swing.JButton();
        cancel_button = new javax.swing.JButton();
        confirm_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Preferences");
        setResizable(false);

        optionsPanels.setToolTipText("");

        hashingPane.setBackground(new java.awt.Color(255, 255, 255));

        hashing_enabled_ck.setBackground(java.awt.SystemColor.controlLtHighlight);
        hashing_enabled_ck.setText("Enabled");
        hashing_enabled_ck.setToolTipText("Check to enable hashing of files");
        hashing_enabled_ck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                hashing_enabled_ckItemStateChanged(evt);
            }
        });

        hashing_algorithms.setBackground(java.awt.SystemColor.controlLtHighlight);
        hashing_algorithms.setBorder(javax.swing.BorderFactory.createTitledBorder("Algorithms"));

        hashing_ed2k_ck.setBackground(java.awt.SystemColor.controlLtHighlight);
        hashing_ed2k_ck.setText("Ed2k");
        hashing_ed2k_ck.setToolTipText("Enable hashing files using the Edonkey 2000 algorithm [fast]");
        hashing_ed2k_ck.setEnabled(false);
        hashing_ed2k_ck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                hashing_ed2k_ckItemStateChanged(evt);
            }
        });

        hashing_crc32_ck.setBackground(java.awt.SystemColor.controlLtHighlight);
        hashing_crc32_ck.setText("CRC-32");
        hashing_crc32_ck.setToolTipText("Enable hashing files using the CRC-32 algorithm [very fast]");
        hashing_crc32_ck.setEnabled(false);
        hashing_crc32_ck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                hashing_crc32_ckItemStateChanged(evt);
            }
        });

        hashing_md5_ck.setBackground(java.awt.SystemColor.controlLtHighlight);
        hashing_md5_ck.setText("MD5");
        hashing_md5_ck.setToolTipText("Enable hashing files using the MD5 algorithm [average]");
        hashing_md5_ck.setEnabled(false);
        hashing_md5_ck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                hashing_md5_ckItemStateChanged(evt);
            }
        });

        hashing_sha1_ck.setBackground(java.awt.SystemColor.controlLtHighlight);
        hashing_sha1_ck.setText("SHA-1");
        hashing_sha1_ck.setToolTipText("Enable hashing files using the SHA-1 algorithm [slow]");
        hashing_sha1_ck.setEnabled(false);
        hashing_sha1_ck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                hashing_sha1_ckItemStateChanged(evt);
            }
        });

        hashing_tth_ck.setBackground(java.awt.SystemColor.controlLtHighlight);
        hashing_tth_ck.setText("TTH");
        hashing_tth_ck.setToolTipText("Enable hashing files using the Tiger Tree Hash algorithm [very slow]");
        hashing_tth_ck.setEnabled(false);
        hashing_tth_ck.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                hashing_tth_ckItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout hashing_algorithmsLayout = new javax.swing.GroupLayout(hashing_algorithms);
        hashing_algorithms.setLayout(hashing_algorithmsLayout);
        hashing_algorithmsLayout.setHorizontalGroup(
            hashing_algorithmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hashing_algorithmsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hashing_algorithmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hashing_ed2k_ck)
                    .addComponent(hashing_crc32_ck)
                    .addComponent(hashing_md5_ck)
                    .addComponent(hashing_sha1_ck)
                    .addComponent(hashing_tth_ck))
                .addContainerGap(294, Short.MAX_VALUE))
        );
        hashing_algorithmsLayout.setVerticalGroup(
            hashing_algorithmsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hashing_algorithmsLayout.createSequentialGroup()
                .addComponent(hashing_ed2k_ck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hashing_crc32_ck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hashing_md5_ck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hashing_sha1_ck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hashing_tth_ck)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout hashingPaneLayout = new javax.swing.GroupLayout(hashingPane);
        hashingPane.setLayout(hashingPaneLayout);
        hashingPaneLayout.setHorizontalGroup(
            hashingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hashingPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hashingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hashing_algorithms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hashing_enabled_ck))
                .addContainerGap())
        );
        hashingPaneLayout.setVerticalGroup(
            hashingPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hashingPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hashing_enabled_ck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hashing_algorithms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        optionsPanels.addTab("Hashing", new javax.swing.ImageIcon(getClass().getResource("/icons/page_white_stack.png")), hashingPane); // NOI18N

        apply_button.setText("Apply");
        apply_button.setToolTipText("Apply changes but don't close dialog");
        apply_button.setEnabled(false);
        apply_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apply_buttonActionPerformed(evt);
            }
        });

        cancel_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancel.png"))); // NOI18N
        cancel_button.setText("Cancel");
        cancel_button.setToolTipText("Ignore changes and close dialog");
        cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_buttonActionPerformed(evt);
            }
        });

        confirm_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/accept.png"))); // NOI18N
        confirm_button.setText("OK");
        confirm_button.setToolTipText("Apply changes made and close dialog");
        confirm_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(optionsPanels, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(167, Short.MAX_VALUE)
                .addComponent(confirm_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancel_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apply_button)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(optionsPanels, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apply_button)
                    .addComponent(cancel_button)
                    .addComponent(confirm_button))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void hashing_enabled_ckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_hashing_enabled_ckItemStateChanged
		boolean isEnabled = (evt.getStateChange() == ItemEvent.SELECTED);
		this.hashing_ed2k_ck.setEnabled(isEnabled);
		this.hashing_crc32_ck.setEnabled(isEnabled);
		this.hashing_md5_ck.setEnabled(isEnabled);
		this.hashing_sha1_ck.setEnabled(isEnabled);
		this.hashing_tth_ck.setEnabled(isEnabled);
		enableApplyButton();
	}//GEN-LAST:event_hashing_enabled_ckItemStateChanged

	private void hashing_ed2k_ckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_hashing_ed2k_ckItemStateChanged
		enableApplyButton();
	}//GEN-LAST:event_hashing_ed2k_ckItemStateChanged

	private void hashing_crc32_ckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_hashing_crc32_ckItemStateChanged
		enableApplyButton();
	}//GEN-LAST:event_hashing_crc32_ckItemStateChanged

	private void hashing_md5_ckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_hashing_md5_ckItemStateChanged
		enableApplyButton();
	}//GEN-LAST:event_hashing_md5_ckItemStateChanged

	private void hashing_sha1_ckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_hashing_sha1_ckItemStateChanged
		enableApplyButton();
	}//GEN-LAST:event_hashing_sha1_ckItemStateChanged

	private void hashing_tth_ckItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_hashing_tth_ckItemStateChanged
		enableApplyButton();
	}//GEN-LAST:event_hashing_tth_ckItemStateChanged

	private void cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_buttonActionPerformed
		this.setVisible(false);
	}//GEN-LAST:event_cancel_buttonActionPerformed

	private void confirm_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirm_buttonActionPerformed
		if (dirty) saveSettings();
		this.setVisible(false);
		this.dispose();
	}//GEN-LAST:event_confirm_buttonActionPerformed

	private void apply_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apply_buttonActionPerformed
		if (!dirty) return; // nothing to do
		saveSettings();
		dirty = false;
		apply_button.setEnabled(false); // disable the button again
	}//GEN-LAST:event_apply_buttonActionPerformed

	public void enableApplyButton() {
		if (dirty) return; // no action needed
		dirty = true;
		this.apply_button.setEnabled(true);
	}

	public static void setLookAndFeel() {
		try {
			// Set platform Java L&F
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (UnsupportedLookAndFeelException e) {
			try { // revert to cross platform
				UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
			} catch (Exception ex) {
				System.err.println(ex.getLocalizedMessage());
				return;
			}
		} catch (Exception e) {
			System.err.println(e.getLocalizedMessage());
			return;
		}
	}
	
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
    	setLookAndFeel();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SwingOptionsEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apply_button;
    private javax.swing.JButton cancel_button;
    private javax.swing.JButton confirm_button;
    private javax.swing.JPanel hashingPane;
    private javax.swing.JPanel hashing_algorithms;
    private javax.swing.JCheckBox hashing_crc32_ck;
    private javax.swing.JCheckBox hashing_ed2k_ck;
    private javax.swing.JCheckBox hashing_enabled_ck;
    private javax.swing.JCheckBox hashing_md5_ck;
    private javax.swing.JCheckBox hashing_sha1_ck;
    private javax.swing.JCheckBox hashing_tth_ck;
    private javax.swing.JTabbedPane optionsPanels;
    // End of variables declaration//GEN-END:variables

}
